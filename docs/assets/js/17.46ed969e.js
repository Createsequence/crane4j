(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{289:function(t,a,e){"use strict";e.r(a);var s=e(14),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"反射工厂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射工厂"}},[t._v("#")]),t._v(" 反射工厂")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("crane4j")]),t._v(" 中，提供了属性操作器 "),a("code",[t._v("PropertyOperator")]),t._v("，它类似于 MyBatis 的反射工厂，用于统一管理框架各处的反射调用操作。")]),t._v(" "),a("p",[t._v("它被用于支持包括装配操作执行器、拆卸操作执行器、方法数据源容器以及自动填充切面中的各种属性操作功能，是整个框架的基石。")]),t._v(" "),a("p",[a("code",[t._v("PropertyOperator")]),t._v(" 默认提供了以下几个实现：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("实现")]),t._v(" "),a("th",[t._v("介绍")]),t._v(" "),a("th",[t._v("是否默认生效")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("ReflectivePropertyOperator")])]),t._v(" "),a("td",[t._v("基于原生反射的普通反射属性操作器，最通用、功能最全的操作器")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("MethodHandlePropertyOperator")])]),t._v(" "),a("td",[t._v("基于方法句柄 "),a("code",[t._v("MethodHandle")]),t._v(" 的属性操作器。较前者拥有更高的性能，但是不支持包括虚拟字段在内的一些额外功能")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("AsmReflectivePropertyOperator")])]),t._v(" "),a("td",[t._v("基于 "),a("code",[t._v("ReflectAsm")]),t._v(" 的字节码反射属性操作器，理论上具备最高的性能，但是不具备包括虚拟字段在内的一些额外功能，且在 JDK9 及以上版本无法使用")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("CacheablePropertyOperator")])]),t._v(" "),a("td",[t._v("装饰器，在原有功能的基础上支持 "),a("code",[t._v("getter")]),t._v(" 和 "),a("code",[t._v("setter")]),t._v(" 缓存")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("MapAccessiblePropertyOperator")])]),t._v(" "),a("td",[t._v("装饰器，在原有功能的基础上支持读写 "),a("code",[t._v("Map")]),t._v(" 集合")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ChainAccessiblePropertyOperator")])]),t._v(" "),a("td",[t._v("装饰器，在原有功能的基础上支持通过链式操作符读写嵌套对象属性")]),t._v(" "),a("td",[t._v("√")])])])]),t._v(" "),a("p",[t._v("如果你想替换默认的 "),a("code",[t._v("PropertyOperator")]),t._v(" 实现，可以在 Spring 配置类中重新声明一个 "),a("code",[t._v("PropertyOperator")]),t._v("，并返回自定义的实现：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("customPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("或者，你也可以直接为已有的操作器添加额外的装饰器：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DecoratedPropertyOperator")]),t._v(" decoratedPropertyOperator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DecoratedPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" configuration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" delegate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decoratedPropertyOperator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndelegate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npropertyOperatorHolder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("注意，装饰器是 crane4j 一些独特功能的来源，比如对 "),a("code",[t._v("Map")]),t._v(" 对象的支持，或者对链式操作符的支持等，不过同时它们也会带来额外的性能消耗。")]),t._v(" "),a("p",[t._v("如果你更在乎性能，且用不到这些额外的功能，那么可以选择性的放弃一些装饰器。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);