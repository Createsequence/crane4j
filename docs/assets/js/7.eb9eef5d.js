(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{275:function(e,o,t){e.exports=t.p+"assets/img/image-20230220191856595.fbd0659c.png"},323:function(e,o,t){"use strict";t.r(o);var v=t(14),_=Object(v.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[e._v("#")]),e._v(" 原理")]),e._v(" "),o("p",[o("img",{attrs:{src:t(275),alt:""}})]),e._v(" "),o("p",[o("code",[e._v("crane4j")]),e._v(" 的整体执行流程并不复杂，可大致分为两阶段：")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("配置解析阶段")]),e._v("：根据 "),o("code",[e._v("AnnotatedElement")]),e._v(" （一般是类或者方法）解析获得对应的操作配置对象 "),o("code",[e._v("BeanOperation")]),e._v("，通过该配置对象我们可以知道一个对象中有多少个字段需要处理，要怎么处理，在 "),o("code",[e._v("BeanOperation")]),e._v(" 里面，一个 "),o("code",[e._v("key")]),e._v(" 字段对应的一个操作会被转为一个 "),o("code",[e._v("Operation")]),e._v(" 对象；")]),e._v(" "),o("li",[o("strong",[e._v("操作执行阶段")]),e._v("：输入要处理的对象，与该对象类型对应操作配置，然后交由操作执行器 "),o("code",[e._v("BeanOperationExecutor")]),e._v(" 生成待完成的任务 "),o("code",[e._v("Execution")]),e._v("，并最终分发给操作执行器 "),o("code",[e._v("OperationHandler")]),e._v("，"),o("code",[e._v("OperationHandler")]),e._v(" 会根据配置从数据源获得对象，并完成具体的字段映射；")])]),e._v(" "),o("p",[e._v("上图描述了一个 "),o("code",[e._v("Foo")]),e._v(" 对象，是如何通过 "),o("code",[e._v("id")]),e._v(" 获得数据源，并最终将数据源中的 "),o("code",[e._v("userName")]),e._v(" 字段值映射到 "),o("code",[e._v("Foo")]),e._v(" 的 "),o("code",[e._v("name")]),e._v(" 字段上的过程。")])])}),[],!1,null,null,null);o.default=_.exports}}]);