(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{287:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"反射工厂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射工厂"}},[t._v("#")]),t._v(" 反射工厂")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("crane4j")]),t._v(" 中，提供了属性操作者 "),a("code",[t._v("PropertyOperator")]),t._v(" 组件，类似于 MyBatis 的反射工厂，用于统一管理框架各处的反射调用操作。")]),t._v(" "),a("p",[t._v("它被用于支持包括装配操作执行器、拆卸操作执行器、方法数据源容器以及自动填充切面中的各种属性操作功能。")]),t._v(" "),a("p",[t._v("默认情况下，"),a("code",[t._v("PropertyOperator")]),t._v(" 提供了五个实现：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ReflectivePropertyOperator")]),t._v("：基于原生反射的普通反射属性操作者；")]),t._v(" "),a("li",[a("code",[t._v("AsmReflectivePropertyOperator")]),t._v("：基于 "),a("code",[t._v("ReflectAsm")]),t._v(" 的字节码反射属性操作者；")]),t._v(" "),a("li",[a("code",[t._v("CacheablePropertyOperator")]),t._v("：装饰器，在原有功能的基础上支持 "),a("code",[t._v("getter")]),t._v(" 和 "),a("code",[t._v("setter")]),t._v(" 缓存；")]),t._v(" "),a("li",[a("code",[t._v("MapAccessiblePropertyOperator")]),t._v("：装饰器，在原有功能的基础上支持读写 "),a("code",[t._v("Map")]),t._v(" 集合；")]),t._v(" "),a("li",[a("code",[t._v("ChainAccessiblePropertyOperator")]),t._v("：装饰器，在原有功能的基础上支持通过链式操作符读写嵌套对象属性；")])]),t._v(" "),a("p",[t._v("如果你想替换默认的 "),a("code",[t._v("PropertyOperator")]),t._v(" 实现，可以在 Spring 配置类中重新声明一个 "),a("code",[t._v("PropertyOperator")]),t._v("，并返回自定义的实现：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("customPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果在非 Spring 环境中，可以获取全局配置对象 "),a("code",[t._v("Crane4jGlobalConfiguration")]),t._v(" 并手动配置自定义的 "),a("code",[t._v("PropertyOperator")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleCrane4jGlobalConfiguration")]),t._v(" configuration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleCrane4jGlobalConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconfiguration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("另外，如果你希望对现有的 "),a("code",[t._v("PropertyOperator")]),t._v(" 进行增强，例如支持读写 "),a("code",[t._v("Map")]),t._v(" 集合或通过链式操作符读写嵌套对象属性，可以使用默认提供的包装类对属性操作者进行包装：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" operator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noperator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MapAccessiblePropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noperator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChainAccessiblePropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("请注意，包装时的顺序很重要，需要根据你的需求和使用情况选择正确的顺序。")])])}),[],!1,null,null,null);a.default=r.exports}}]);