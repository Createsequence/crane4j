(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{290:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"注解处理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注解处理器"}},[t._v("#")]),t._v(" 注解处理器")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("crane4j")]),t._v("中，你可以通过各种注解去声明操作配置，比如 "),e("code",[t._v("@Assemble")]),t._v("、"),e("code",[t._v("@Disassemble")]),t._v("、"),e("code",[t._v("@AssembleEnum")]),t._v(" 和 "),e("code",[t._v("@AssembleMp")]),t._v("，我们称这用于声明操作的注解为"),e("strong",[t._v("操作注解")]),t._v("。它们底层实际上依赖于解析器中对应的操作注解处理器 "),e("code",[t._v("OperationAnnotationHandler")]),t._v(" 实现。")]),t._v(" "),e("p",[e("code",[t._v("crane4j")]),t._v(" 在这部分功能使用了非常典型的责任链模式。在开始解析配置前，我们向配置解析器 "),e("code",[t._v("BeanOperationParser")]),t._v(" 注册一系列注解处理器，而每个处理器都用于处理某个特定的注解。")]),t._v(" "),e("p",[t._v("当我们将一个需要解析的 "),e("code",[t._v("AnnotatedElement")]),t._v(" 传递给"),e("code",[t._v("Parser")]),t._v("时，"),e("code",[t._v("Parser")]),t._v(" 将创建一个 "),e("code",[t._v("BeanOperations")]),t._v(" 配置对象，并驱动它在处理器链上流转。每个解析器根据规则将 "),e("code",[t._v("AnnotatedElement")]),t._v(" 上的特定注解解析为对应的装配或拆卸配置。")]),t._v(" "),e("p",[t._v("下图展示了解析器的工作流程：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://img.xiajibagao.top/%E6%97%A0%E6%A0%87%E9%A2%98-2023-06-04-1303.png",alt:""}})]),t._v(" "),e("p",[e("code",[t._v("crane4j")]),t._v("目前提供了五个内置的操作注解处理器：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("处理器")]),t._v(" "),e("th",[t._v("注解")]),t._v(" "),e("th",[t._v("对应操作类型")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("DisassembleAnnotationHandler")])]),t._v(" "),e("td",[e("code",[t._v("@Disassemble")])]),t._v(" "),e("td",[t._v("拆卸操作 "),e("code",[t._v("DisassembleOperation")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("AssembleAnnotationHandler")])]),t._v(" "),e("td",[e("code",[t._v("@Assemble")])]),t._v(" "),e("td",[t._v("装配操作 "),e("code",[t._v("AssembleOperation")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("AssembleEnumAnnotationHandler")])]),t._v(" "),e("td",[e("code",[t._v("@AssembleEnum")])]),t._v(" "),e("td",[t._v("装配操作 "),e("code",[t._v("AssembleOperation")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("AssembleMethodAnnotationHandler")])]),t._v(" "),e("td",[e("code",[t._v("@AssembleMethod")])]),t._v(" "),e("td",[t._v("装配操作 "),e("code",[t._v("AssembleOperation")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("AssembleMpAnnotationHandler")])]),t._v(" "),e("td",[e("code",[t._v("@AssembleMp")])]),t._v(" "),e("td",[t._v("装配操作 "),e("code",[t._v("AssembleOperation")])])])])]),t._v(" "),e("p",[t._v("你可以实现 "),e("code",[t._v("OperationAnnotationHandler")]),t._v(" 接口创建自定义的注解处理器，然后将其注册到配置类即可：")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Crane4jGlobalConfiguration")]),t._v(" configuration "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleCrane4jGlobalConfiguration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeHierarchyBeanOperationParser")]),t._v(" parser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" configuration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanOperationParser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeHierarchyBeanOperationParser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addOperationAnnotationHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomeOperationAnnotationHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("如果在 Spring 环境，那么你直接将其交给 Spring 容器管理即可，项目启动后 crane4j 会自动注册。")])])}),[],!1,null,null,null);e.default=n.exports}}]);