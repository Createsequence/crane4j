(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{293:function(a,t,s){"use strict";s.r(t);var n=s(14),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"容器提供者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器提供者"}},[a._v("#")]),a._v(" 容器提供者")]),a._v(" "),t("p",[a._v("容器提供者 "),t("code",[a._v("ContainerProvider")]),a._v(" 是用于获取数据源容器的组件，类似于 Spring 中的 "),t("code",[a._v("FactoryBean")]),a._v("，全局配置类 "),t("code",[a._v("Crane4jGlobalConfiguration")]),a._v(" 本身就是一个 "),t("code",[a._v("ContainerProvider")]),a._v("。")]),a._v(" "),t("p",[a._v("它被设计用于接入第基于三方框架实现的容器，比如 "),t("code",[a._v("MybatisPlusQueryContainerProvider")]),a._v("，我们可以通过它获取基于 "),t("code",[a._v("BaseMapper#selectList")]),a._v(" 方法构建的特殊方法容器，当调用时等同于调用"),t("code",[a._v("BaseMapper#selectList")]),a._v(" 方法。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.xiajibagao.top/image-20230311184930927.png",alt:"image-20230311184930927"}})]),a._v(" "),t("h2",{attrs:{id:"_1-创建并注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建并注册"}},[a._v("#")]),a._v(" 1.创建并注册")]),a._v(" "),t("p",[a._v("crane4j 默认提供了 "),t("code",[a._v("PartitionContainerProvider")]),a._v(" 作为常用实现类，它可以满足绝大部分的需求，或者你也可以实现 "),t("code",[a._v("ContainerProvider")]),a._v(" 接口，自己定义一个提供者。")]),a._v(" "),t("p",[a._v("当你创建了一个实例后，若你在非 Spring 环境中，你需要将其手动注册到全局配置中：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleCrane4jGlobalConfiguration")]),a._v(" configuration "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleCrane4jGlobalConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconfiguration"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerContainerProviderput")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fooContainerProvider"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" xxxContainerProvider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("如果你是在 Spring 环境，那么你直接将其交给 Spring 管理即可，在项目启动后它会自动注册。")]),a._v(" "),t("h2",{attrs:{id:"_2-在配置中引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在配置中引用"}},[a._v("#")]),a._v(" 2.在配置中引用")]),a._v(" "),t("p",[a._v("你可以在 "),t("code",[a._v("@Assemble")]),a._v(" 注解的 "),t("code",[a._v("containerProvider")]),a._v(" 属性中，指定你需要的容器要从哪个提供者获取。比如：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserVO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Assemble")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        container "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"user"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" containerProvider "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fooContainerProvider"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        props "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Mapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("src "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ref "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("当配置解析时，"),t("code",[a._v("crane4j")]),a._v(" 将从用户指定的 "),t("code",[a._v("fooContainerProvider")]),a._v(" 获取 "),t("code",[a._v("namespace")]),a._v(" 为 "),t("code",[a._v("user")]),a._v(" 的数据源容器。")]),a._v(" "),t("p",[a._v("当然，你也可以像 Spring 从 "),t("code",[a._v("FactoryBean")]),a._v(" 获取 "),t("code",[a._v("bean")]),a._v(" 那样，通过 "),t("code",[a._v("$$")]),a._v(" 连接符拼接两者，然后将其作为 "),t("code",[a._v("namesapce")]),a._v("，比如上述配置可以改写为：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserVO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Assemble")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        container "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fooContainerProvider&&user"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        props "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Mapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("src "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ref "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("两种方式效果一致，不过通常还是更推荐使用第一种方式，它会更直观一些。")])])}),[],!1,null,null,null);t.default=e.exports}}]);