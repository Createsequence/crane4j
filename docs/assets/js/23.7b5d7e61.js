(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{298:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"反射工厂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射工厂"}},[t._v("#")]),t._v(" 反射工厂")]),t._v(" "),a("p",[t._v("参照 mybatis，crane4j 也提供了一套类似反射工厂的组件，即属性操作者 "),a("code",[t._v("PropertyOperatior")]),t._v("。")]),t._v(" "),a("p",[t._v("它用于统一的管理框架各处的反射调用，包括装配操作执行器、拆卸操作执行器、方法数据源容器的分组以及自动填充切面中的包装类提取等功能都依赖它完成。")]),t._v(" "),a("p",[t._v("默认提供了四个实现：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("AsmReflectPropertyOperator")]),t._v("：基于 "),a("code",[t._v("ReflectAsm")]),t._v(" 的字节码反射属性操作者；")]),t._v(" "),a("li",[a("code",[t._v("ReflectPropertyOperator")]),t._v("：基于原生反射的普通反射属性操作者；")]),t._v(" "),a("li",[a("code",[t._v("MapAccessiblePropertyOperator")]),t._v("：装饰器，在原功能的基础上，支持读写 "),a("code",[t._v("Map")]),t._v(" 集合；")]),t._v(" "),a("li",[a("code",[t._v("ChainAccessiblePropertyOperator")]),t._v("：装饰器，在原功能的基础上，支持通过链式操作符读写嵌套对象属性；")])]),t._v(" "),a("p",[a("strong",[t._v("替换默认实现")])]),t._v(" "),a("p",[t._v("如果我们想要使用自定义的 "),a("code",[t._v("PropertyOperator")]),t._v(" 替换默认的实现，可以在 Spring 配置类中重新声明一个 "),a("code",[t._v("PropertyOperator")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("customPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果在非 "),a("code",[t._v("Spring")]),t._v(" 环境中，可以获取全局配置对象 "),a("code",[t._v("Crane4jGlobalConfiguration")]),t._v(" 手动配置：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleCrane4jGlobalConfiguration")]),t._v(" configuration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleCrane4jGlobalConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconfiguration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("使用包装类增强")])]),t._v(" "),a("p",[t._v("如果我们不想自己重新再实现一遍支持 "),a("code",[t._v("Map")]),t._v(" 读写，以及通过链式操作符读写嵌套对象属性的功能，可以使用默认的两个包装类对你的属性操作者进行增强：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyOperator")]),t._v(" operator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noperator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MapAccessiblePropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noperator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChainAccessiblePropertyOperator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("不过包装的时候要稍微注意一下顺序。")])])}),[],!1,null,null,null);a.default=e.exports}}]);